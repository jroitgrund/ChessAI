// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChessMessage.proto

package ChessProtocol;

public final class ChessMessage {

  private ChessMessage() {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }

  public interface InfoOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // optional bool color = 1;
    boolean hasColor();

    boolean getColor();

    // optional .ChessProtocol.Move move = 2;
    boolean hasMove();

    ChessProtocol.ChessMessage.Move getMove();

    ChessProtocol.ChessMessage.MoveOrBuilder getMoveOrBuilder();

    // optional bool endGame = 3;
    boolean hasEndGame();

    boolean getEndGame();
  }

  public static final class Info extends com.google.protobuf.GeneratedMessage
      implements InfoOrBuilder {

    // Use Info.newBuilder() to construct.
    private Info(Builder builder) {
      super(builder);
    }

    private Info(boolean noInit) {
    }

    private static final Info defaultInstance;

    public static Info getDefaultInstance() {
      return defaultInstance;
    }

    public Info getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return ChessProtocol.ChessMessage.internal_static_ChessProtocol_Info_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return ChessProtocol.ChessMessage.internal_static_ChessProtocol_Info_fieldAccessorTable;
    }

    private int             bitField0_;

    // optional bool color = 1;
    public static final int COLOR_FIELD_NUMBER = 1;

    private boolean         color_;

    public boolean hasColor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public boolean getColor() {
      return color_;
    }

    // optional .ChessProtocol.Move move = 2;
    public static final int                 MOVE_FIELD_NUMBER = 2;

    private ChessProtocol.ChessMessage.Move move_;

    public boolean hasMove() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    public ChessProtocol.ChessMessage.Move getMove() {
      return move_;
    }

    public ChessProtocol.ChessMessage.MoveOrBuilder getMoveOrBuilder() {
      return move_;
    }

    // optional bool endGame = 3;
    public static final int ENDGAME_FIELD_NUMBER = 3;

    private boolean         endGame_;

    public boolean hasEndGame() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    public boolean getEndGame() {
      return endGame_;
    }

    private void initFields() {
      color_ = false;
      move_ = ChessProtocol.ChessMessage.Move.getDefaultInstance();
      endGame_ = false;
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;
      if (hasMove()) {
        if (!getMove().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, color_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, move_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, endGame_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, color_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2,
            move_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(3,
            endGame_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ChessProtocol.ChessMessage.Info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Info parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Info parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Info parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      }
      else {
        return null;
      }
    }

    public static ChessProtocol.ChessMessage.Info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      }
      else {
        return null;
      }
    }

    public static ChessProtocol.ChessMessage.Info parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(ChessProtocol.ChessMessage.Info prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        ChessProtocol.ChessMessage.InfoOrBuilder {

      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return ChessProtocol.ChessMessage.internal_static_ChessProtocol_Info_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return ChessProtocol.ChessMessage.internal_static_ChessProtocol_Info_fieldAccessorTable;
      }

      // Construct using ChessProtocol.ChessMessage.Info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMoveFieldBuilder();
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        color_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (moveBuilder_ == null) {
          move_ = ChessProtocol.ChessMessage.Move.getDefaultInstance();
        }
        else {
          moveBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        endGame_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return ChessProtocol.ChessMessage.Info.getDescriptor();
      }

      public ChessProtocol.ChessMessage.Info getDefaultInstanceForType() {
        return ChessProtocol.ChessMessage.Info.getDefaultInstance();
      }

      public ChessProtocol.ChessMessage.Info build() {
        ChessProtocol.ChessMessage.Info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private ChessProtocol.ChessMessage.Info buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        ChessProtocol.ChessMessage.Info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result)
              .asInvalidProtocolBufferException();
        }
        return result;
      }

      public ChessProtocol.ChessMessage.Info buildPartial() {
        ChessProtocol.ChessMessage.Info result = new ChessProtocol.ChessMessage.Info(
            this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.color_ = color_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (moveBuilder_ == null) {
          result.move_ = move_;
        }
        else {
          result.move_ = moveBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.endGame_ = endGame_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ChessProtocol.ChessMessage.Info) {
          return mergeFrom((ChessProtocol.ChessMessage.Info) other);
        }
        else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ChessProtocol.ChessMessage.Info other) {
        if (other == ChessProtocol.ChessMessage.Info.getDefaultInstance())
          return this;
        if (other.hasColor()) {
          setColor(other.getColor());
        }
        if (other.hasMove()) {
          mergeMove(other.getMove());
        }
        if (other.hasEndGame()) {
          setEndGame(other.getEndGame());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasMove()) {
          if (!getMove().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
            .newBuilder(this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry,
                  tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              color_ = input.readBool();
              break;
            }
            case 18: {
              ChessProtocol.ChessMessage.Move.Builder subBuilder = ChessProtocol.ChessMessage.Move
                  .newBuilder();
              if (hasMove()) {
                subBuilder.mergeFrom(getMove());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMove(subBuilder.buildPartial());
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              endGame_ = input.readBool();
              break;
            }
          }
        }
      }

      private int     bitField0_;

      // optional bool color = 1;
      private boolean color_;

      public boolean hasColor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public boolean getColor() {
        return color_;
      }

      public Builder setColor(boolean value) {
        bitField0_ |= 0x00000001;
        color_ = value;
        onChanged();
        return this;
      }

      public Builder clearColor() {
        bitField0_ = (bitField0_ & ~0x00000001);
        color_ = false;
        onChanged();
        return this;
      }

      // optional .ChessProtocol.Move move = 2;
      private ChessProtocol.ChessMessage.Move                                                                                                                            move_ = ChessProtocol.ChessMessage.Move
                                                                                                                                                                                   .getDefaultInstance();

      private com.google.protobuf.SingleFieldBuilder<ChessProtocol.ChessMessage.Move, ChessProtocol.ChessMessage.Move.Builder, ChessProtocol.ChessMessage.MoveOrBuilder> moveBuilder_;

      public boolean hasMove() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public ChessProtocol.ChessMessage.Move getMove() {
        if (moveBuilder_ == null) {
          return move_;
        }
        else {
          return moveBuilder_.getMessage();
        }
      }

      public Builder setMove(ChessProtocol.ChessMessage.Move value) {
        if (moveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          move_ = value;
          onChanged();
        }
        else {
          moveBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder setMove(
          ChessProtocol.ChessMessage.Move.Builder builderForValue) {
        if (moveBuilder_ == null) {
          move_ = builderForValue.build();
          onChanged();
        }
        else {
          moveBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder mergeMove(ChessProtocol.ChessMessage.Move value) {
        if (moveBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)
              && move_ != ChessProtocol.ChessMessage.Move.getDefaultInstance()) {
            move_ = ChessProtocol.ChessMessage.Move.newBuilder(move_)
                .mergeFrom(value).buildPartial();
          }
          else {
            move_ = value;
          }
          onChanged();
        }
        else {
          moveBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder clearMove() {
        if (moveBuilder_ == null) {
          move_ = ChessProtocol.ChessMessage.Move.getDefaultInstance();
          onChanged();
        }
        else {
          moveBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public ChessProtocol.ChessMessage.Move.Builder getMoveBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getMoveFieldBuilder().getBuilder();
      }

      public ChessProtocol.ChessMessage.MoveOrBuilder getMoveOrBuilder() {
        if (moveBuilder_ != null) {
          return moveBuilder_.getMessageOrBuilder();
        }
        else {
          return move_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<ChessProtocol.ChessMessage.Move, ChessProtocol.ChessMessage.Move.Builder, ChessProtocol.ChessMessage.MoveOrBuilder> getMoveFieldBuilder() {
        if (moveBuilder_ == null) {
          moveBuilder_ = new com.google.protobuf.SingleFieldBuilder<ChessProtocol.ChessMessage.Move, ChessProtocol.ChessMessage.Move.Builder, ChessProtocol.ChessMessage.MoveOrBuilder>(
              move_, getParentForChildren(), isClean());
          move_ = null;
        }
        return moveBuilder_;
      }

      // optional bool endGame = 3;
      private boolean endGame_;

      public boolean hasEndGame() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      public boolean getEndGame() {
        return endGame_;
      }

      public Builder setEndGame(boolean value) {
        bitField0_ |= 0x00000004;
        endGame_ = value;
        onChanged();
        return this;
      }

      public Builder clearEndGame() {
        bitField0_ = (bitField0_ & ~0x00000004);
        endGame_ = false;
        onChanged();
        return this;
      }
      // @@protoc_insertion_point(builder_scope:ChessProtocol.Info)
    }

    static {
      defaultInstance = new Info(true);
      defaultInstance.initFields();
    }
    // @@protoc_insertion_point(class_scope:ChessProtocol.Info)
  }

  public interface PositionOrBuilder extends
      com.google.protobuf.MessageOrBuilder {

    // required int32 col = 1;
    boolean hasCol();

    int getCol();

    // required int32 row = 2;
    boolean hasRow();

    int getRow();
  }

  public static final class Position extends
      com.google.protobuf.GeneratedMessage implements PositionOrBuilder {

    // Use Position.newBuilder() to construct.
    private Position(Builder builder) {
      super(builder);
    }

    private Position(boolean noInit) {
    }

    private static final Position defaultInstance;

    public static Position getDefaultInstance() {
      return defaultInstance;
    }

    public Position getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return ChessProtocol.ChessMessage.internal_static_ChessProtocol_Position_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return ChessProtocol.ChessMessage.internal_static_ChessProtocol_Position_fieldAccessorTable;
    }

    private int             bitField0_;

    // required int32 col = 1;
    public static final int COL_FIELD_NUMBER = 1;

    private int             col_;

    public boolean hasCol() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public int getCol() {
      return col_;
    }

    // required int32 row = 2;
    public static final int ROW_FIELD_NUMBER = 2;

    private int             row_;

    public boolean hasRow() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    public int getRow() {
      return row_;
    }

    private void initFields() {
      col_ = 0;
      row_ = 0;
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;
      if (!hasCol()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRow()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, col_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, row_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(1, col_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, row_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ChessProtocol.ChessMessage.Position parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Position parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Position parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Position parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Position parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Position parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Position parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      }
      else {
        return null;
      }
    }

    public static ChessProtocol.ChessMessage.Position parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      }
      else {
        return null;
      }
    }

    public static ChessProtocol.ChessMessage.Position parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Position parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(
        ChessProtocol.ChessMessage.Position prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        ChessProtocol.ChessMessage.PositionOrBuilder {

      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return ChessProtocol.ChessMessage.internal_static_ChessProtocol_Position_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return ChessProtocol.ChessMessage.internal_static_ChessProtocol_Position_fieldAccessorTable;
      }

      // Construct using ChessProtocol.ChessMessage.Position.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        col_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        row_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return ChessProtocol.ChessMessage.Position.getDescriptor();
      }

      public ChessProtocol.ChessMessage.Position getDefaultInstanceForType() {
        return ChessProtocol.ChessMessage.Position.getDefaultInstance();
      }

      public ChessProtocol.ChessMessage.Position build() {
        ChessProtocol.ChessMessage.Position result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private ChessProtocol.ChessMessage.Position buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        ChessProtocol.ChessMessage.Position result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result)
              .asInvalidProtocolBufferException();
        }
        return result;
      }

      public ChessProtocol.ChessMessage.Position buildPartial() {
        ChessProtocol.ChessMessage.Position result = new ChessProtocol.ChessMessage.Position(
            this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.col_ = col_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.row_ = row_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ChessProtocol.ChessMessage.Position) {
          return mergeFrom((ChessProtocol.ChessMessage.Position) other);
        }
        else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ChessProtocol.ChessMessage.Position other) {
        if (other == ChessProtocol.ChessMessage.Position.getDefaultInstance())
          return this;
        if (other.hasCol()) {
          setCol(other.getCol());
        }
        if (other.hasRow()) {
          setRow(other.getRow());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCol()) {
          return false;
        }
        if (!hasRow()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
            .newBuilder(this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry,
                  tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              col_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              row_ = input.readInt32();
              break;
            }
          }
        }
      }

      private int bitField0_;

      // required int32 col = 1;
      private int col_;

      public boolean hasCol() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public int getCol() {
        return col_;
      }

      public Builder setCol(int value) {
        bitField0_ |= 0x00000001;
        col_ = value;
        onChanged();
        return this;
      }

      public Builder clearCol() {
        bitField0_ = (bitField0_ & ~0x00000001);
        col_ = 0;
        onChanged();
        return this;
      }

      // required int32 row = 2;
      private int row_;

      public boolean hasRow() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public int getRow() {
        return row_;
      }

      public Builder setRow(int value) {
        bitField0_ |= 0x00000002;
        row_ = value;
        onChanged();
        return this;
      }

      public Builder clearRow() {
        bitField0_ = (bitField0_ & ~0x00000002);
        row_ = 0;
        onChanged();
        return this;
      }
      // @@protoc_insertion_point(builder_scope:ChessProtocol.Position)
    }

    static {
      defaultInstance = new Position(true);
      defaultInstance.initFields();
    }
    // @@protoc_insertion_point(class_scope:ChessProtocol.Position)
  }

  public interface MoveOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // required .ChessProtocol.Position from = 1;
    boolean hasFrom();

    ChessProtocol.ChessMessage.Position getFrom();

    ChessProtocol.ChessMessage.PositionOrBuilder getFromOrBuilder();

    // required .ChessProtocol.Position to = 2;
    boolean hasTo();

    ChessProtocol.ChessMessage.Position getTo();

    ChessProtocol.ChessMessage.PositionOrBuilder getToOrBuilder();
  }

  public static final class Move extends com.google.protobuf.GeneratedMessage
      implements MoveOrBuilder {

    // Use Move.newBuilder() to construct.
    private Move(Builder builder) {
      super(builder);
    }

    private Move(boolean noInit) {
    }

    private static final Move defaultInstance;

    public static Move getDefaultInstance() {
      return defaultInstance;
    }

    public Move getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return ChessProtocol.ChessMessage.internal_static_ChessProtocol_Move_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return ChessProtocol.ChessMessage.internal_static_ChessProtocol_Move_fieldAccessorTable;
    }

    private int                                 bitField0_;

    // required .ChessProtocol.Position from = 1;
    public static final int                     FROM_FIELD_NUMBER = 1;

    private ChessProtocol.ChessMessage.Position from_;

    public boolean hasFrom() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public ChessProtocol.ChessMessage.Position getFrom() {
      return from_;
    }

    public ChessProtocol.ChessMessage.PositionOrBuilder getFromOrBuilder() {
      return from_;
    }

    // required .ChessProtocol.Position to = 2;
    public static final int                     TO_FIELD_NUMBER = 2;

    private ChessProtocol.ChessMessage.Position to_;

    public boolean hasTo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    public ChessProtocol.ChessMessage.Position getTo() {
      return to_;
    }

    public ChessProtocol.ChessMessage.PositionOrBuilder getToOrBuilder() {
      return to_;
    }

    private void initFields() {
      from_ = ChessProtocol.ChessMessage.Position.getDefaultInstance();
      to_ = ChessProtocol.ChessMessage.Position.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;
      if (!hasFrom()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getFrom().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getTo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, from_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, to_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1,
            from_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, to_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ChessProtocol.ChessMessage.Move parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Move parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Move parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Move parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Move parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Move parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Move parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      }
      else {
        return null;
      }
    }

    public static ChessProtocol.ChessMessage.Move parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      }
      else {
        return null;
      }
    }

    public static ChessProtocol.ChessMessage.Move parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static ChessProtocol.ChessMessage.Move parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(ChessProtocol.ChessMessage.Move prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        ChessProtocol.ChessMessage.MoveOrBuilder {

      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return ChessProtocol.ChessMessage.internal_static_ChessProtocol_Move_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return ChessProtocol.ChessMessage.internal_static_ChessProtocol_Move_fieldAccessorTable;
      }

      // Construct using ChessProtocol.ChessMessage.Move.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFromFieldBuilder();
          getToFieldBuilder();
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (fromBuilder_ == null) {
          from_ = ChessProtocol.ChessMessage.Position.getDefaultInstance();
        }
        else {
          fromBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (toBuilder_ == null) {
          to_ = ChessProtocol.ChessMessage.Position.getDefaultInstance();
        }
        else {
          toBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return ChessProtocol.ChessMessage.Move.getDescriptor();
      }

      public ChessProtocol.ChessMessage.Move getDefaultInstanceForType() {
        return ChessProtocol.ChessMessage.Move.getDefaultInstance();
      }

      public ChessProtocol.ChessMessage.Move build() {
        ChessProtocol.ChessMessage.Move result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private ChessProtocol.ChessMessage.Move buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        ChessProtocol.ChessMessage.Move result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result)
              .asInvalidProtocolBufferException();
        }
        return result;
      }

      public ChessProtocol.ChessMessage.Move buildPartial() {
        ChessProtocol.ChessMessage.Move result = new ChessProtocol.ChessMessage.Move(
            this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (fromBuilder_ == null) {
          result.from_ = from_;
        }
        else {
          result.from_ = fromBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (toBuilder_ == null) {
          result.to_ = to_;
        }
        else {
          result.to_ = toBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ChessProtocol.ChessMessage.Move) {
          return mergeFrom((ChessProtocol.ChessMessage.Move) other);
        }
        else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ChessProtocol.ChessMessage.Move other) {
        if (other == ChessProtocol.ChessMessage.Move.getDefaultInstance())
          return this;
        if (other.hasFrom()) {
          mergeFrom(other.getFrom());
        }
        if (other.hasTo()) {
          mergeTo(other.getTo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFrom()) {
          return false;
        }
        if (!hasTo()) {
          return false;
        }
        if (!getFrom().isInitialized()) {
          return false;
        }
        if (!getTo().isInitialized()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
            .newBuilder(this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry,
                  tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              ChessProtocol.ChessMessage.Position.Builder subBuilder = ChessProtocol.ChessMessage.Position
                  .newBuilder();
              if (hasFrom()) {
                subBuilder.mergeFrom(getFrom());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFrom(subBuilder.buildPartial());
              break;
            }
            case 18: {
              ChessProtocol.ChessMessage.Position.Builder subBuilder = ChessProtocol.ChessMessage.Position
                  .newBuilder();
              if (hasTo()) {
                subBuilder.mergeFrom(getTo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }

      private int                                                                                                                                                                    bitField0_;

      // required .ChessProtocol.Position from = 1;
      private ChessProtocol.ChessMessage.Position                                                                                                                                    from_ = ChessProtocol.ChessMessage.Position
                                                                                                                                                                                               .getDefaultInstance();

      private com.google.protobuf.SingleFieldBuilder<ChessProtocol.ChessMessage.Position, ChessProtocol.ChessMessage.Position.Builder, ChessProtocol.ChessMessage.PositionOrBuilder> fromBuilder_;

      public boolean hasFrom() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public ChessProtocol.ChessMessage.Position getFrom() {
        if (fromBuilder_ == null) {
          return from_;
        }
        else {
          return fromBuilder_.getMessage();
        }
      }

      public Builder setFrom(ChessProtocol.ChessMessage.Position value) {
        if (fromBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          from_ = value;
          onChanged();
        }
        else {
          fromBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }

      public Builder setFrom(
          ChessProtocol.ChessMessage.Position.Builder builderForValue) {
        if (fromBuilder_ == null) {
          from_ = builderForValue.build();
          onChanged();
        }
        else {
          fromBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }

      public Builder mergeFrom(ChessProtocol.ChessMessage.Position value) {
        if (fromBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)
              && from_ != ChessProtocol.ChessMessage.Position
                  .getDefaultInstance()) {
            from_ = ChessProtocol.ChessMessage.Position.newBuilder(from_)
                .mergeFrom(value).buildPartial();
          }
          else {
            from_ = value;
          }
          onChanged();
        }
        else {
          fromBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }

      public Builder clearFrom() {
        if (fromBuilder_ == null) {
          from_ = ChessProtocol.ChessMessage.Position.getDefaultInstance();
          onChanged();
        }
        else {
          fromBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public ChessProtocol.ChessMessage.Position.Builder getFromBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getFromFieldBuilder().getBuilder();
      }

      public ChessProtocol.ChessMessage.PositionOrBuilder getFromOrBuilder() {
        if (fromBuilder_ != null) {
          return fromBuilder_.getMessageOrBuilder();
        }
        else {
          return from_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<ChessProtocol.ChessMessage.Position, ChessProtocol.ChessMessage.Position.Builder, ChessProtocol.ChessMessage.PositionOrBuilder> getFromFieldBuilder() {
        if (fromBuilder_ == null) {
          fromBuilder_ = new com.google.protobuf.SingleFieldBuilder<ChessProtocol.ChessMessage.Position, ChessProtocol.ChessMessage.Position.Builder, ChessProtocol.ChessMessage.PositionOrBuilder>(
              from_, getParentForChildren(), isClean());
          from_ = null;
        }
        return fromBuilder_;
      }

      // required .ChessProtocol.Position to = 2;
      private ChessProtocol.ChessMessage.Position                                                                                                                                    to_ = ChessProtocol.ChessMessage.Position
                                                                                                                                                                                             .getDefaultInstance();

      private com.google.protobuf.SingleFieldBuilder<ChessProtocol.ChessMessage.Position, ChessProtocol.ChessMessage.Position.Builder, ChessProtocol.ChessMessage.PositionOrBuilder> toBuilder_;

      public boolean hasTo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public ChessProtocol.ChessMessage.Position getTo() {
        if (toBuilder_ == null) {
          return to_;
        }
        else {
          return toBuilder_.getMessage();
        }
      }

      public Builder setTo(ChessProtocol.ChessMessage.Position value) {
        if (toBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          to_ = value;
          onChanged();
        }
        else {
          toBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder setTo(
          ChessProtocol.ChessMessage.Position.Builder builderForValue) {
        if (toBuilder_ == null) {
          to_ = builderForValue.build();
          onChanged();
        }
        else {
          toBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder mergeTo(ChessProtocol.ChessMessage.Position value) {
        if (toBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)
              && to_ != ChessProtocol.ChessMessage.Position
                  .getDefaultInstance()) {
            to_ = ChessProtocol.ChessMessage.Position.newBuilder(to_)
                .mergeFrom(value).buildPartial();
          }
          else {
            to_ = value;
          }
          onChanged();
        }
        else {
          toBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder clearTo() {
        if (toBuilder_ == null) {
          to_ = ChessProtocol.ChessMessage.Position.getDefaultInstance();
          onChanged();
        }
        else {
          toBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public ChessProtocol.ChessMessage.Position.Builder getToBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getToFieldBuilder().getBuilder();
      }

      public ChessProtocol.ChessMessage.PositionOrBuilder getToOrBuilder() {
        if (toBuilder_ != null) {
          return toBuilder_.getMessageOrBuilder();
        }
        else {
          return to_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<ChessProtocol.ChessMessage.Position, ChessProtocol.ChessMessage.Position.Builder, ChessProtocol.ChessMessage.PositionOrBuilder> getToFieldBuilder() {
        if (toBuilder_ == null) {
          toBuilder_ = new com.google.protobuf.SingleFieldBuilder<ChessProtocol.ChessMessage.Position, ChessProtocol.ChessMessage.Position.Builder, ChessProtocol.ChessMessage.PositionOrBuilder>(
              to_, getParentForChildren(), isClean());
          to_ = null;
        }
        return toBuilder_;
      }
      // @@protoc_insertion_point(builder_scope:ChessProtocol.Move)
    }

    static {
      defaultInstance = new Move(true);
      defaultInstance.initFields();
    }
    // @@protoc_insertion_point(class_scope:ChessProtocol.Move)
  }

  private static com.google.protobuf.Descriptors.Descriptor              internal_static_ChessProtocol_Info_descriptor;

  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_ChessProtocol_Info_fieldAccessorTable;

  private static com.google.protobuf.Descriptors.Descriptor              internal_static_ChessProtocol_Position_descriptor;

  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_ChessProtocol_Position_fieldAccessorTable;

  private static com.google.protobuf.Descriptors.Descriptor              internal_static_ChessProtocol_Move_descriptor;

  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_ChessProtocol_Move_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;
  static {
    java.lang.String[] descriptorData = { "\n\022ChessMessage.proto\022\rChessProtocol\"I\n\004I"
        + "nfo\022\r\n\005color\030\001 \001(\010\022!\n\004move\030\002 \001(\0132\023.Chess"
        + "Protocol.Move\022\017\n\007endGame\030\003 \001(\010\"$\n\010Positi"
        + "on\022\013\n\003col\030\001 \002(\005\022\013\n\003row\030\002 \002(\005\"R\n\004Move\022%\n\004"
        + "from\030\001 \002(\0132\027.ChessProtocol.Position\022#\n\002t"
        + "o\030\002 \002(\0132\027.ChessProtocol.Position" };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner = new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {

      public com.google.protobuf.ExtensionRegistry assignDescriptors(
          com.google.protobuf.Descriptors.FileDescriptor root) {
        descriptor = root;
        internal_static_ChessProtocol_Info_descriptor = getDescriptor()
            .getMessageTypes().get(0);
        internal_static_ChessProtocol_Info_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_ChessProtocol_Info_descriptor,
            new java.lang.String[] { "Color", "Move", "EndGame", },
            ChessProtocol.ChessMessage.Info.class,
            ChessProtocol.ChessMessage.Info.Builder.class);
        internal_static_ChessProtocol_Position_descriptor = getDescriptor()
            .getMessageTypes().get(1);
        internal_static_ChessProtocol_Position_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_ChessProtocol_Position_descriptor,
            new java.lang.String[] { "Col", "Row", },
            ChessProtocol.ChessMessage.Position.class,
            ChessProtocol.ChessMessage.Position.Builder.class);
        internal_static_ChessProtocol_Move_descriptor = getDescriptor()
            .getMessageTypes().get(2);
        internal_static_ChessProtocol_Move_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_ChessProtocol_Move_descriptor,
            new java.lang.String[] { "From", "To", },
            ChessProtocol.ChessMessage.Move.class,
            ChessProtocol.ChessMessage.Move.Builder.class);
        return null;
      }
    };
    com.google.protobuf.Descriptors.FileDescriptor
        .internalBuildGeneratedFileFrom(descriptorData,
            new com.google.protobuf.Descriptors.FileDescriptor[] {}, assigner);
  }
  // @@protoc_insertion_point(outer_class_scope)
}
